# Generated by Django 5.0.4 on 2024-05-10 02:29

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='VideoGenre',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('genre', models.CharField(max_length=100, unique=True)),
                ('number_of_public_records', models.IntegerField(default=0)),
                ('custom', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': 'Video Genre',
                'verbose_name_plural': 'Video Genres',
                'db_table': 'video_genre',
            },
        ),
        migrations.CreateModel(
            name='TempVideo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('video_name', models.CharField(max_length=100)),
                ('title', models.CharField(default='', max_length=100)),
                ('video_location', models.CharField(default='temp_videos/', max_length=300)),
                ('thumbnail_location', models.CharField(default='data/thumbnails/', max_length=300)),
                ('name', models.CharField(default='', max_length=100)),
                ('image_added', models.BooleanField(default=False)),
                ('imdb_link', models.CharField(default='', max_length=300)),
                ('imdb_rating', models.FloatField(default=0)),
                ('imdb_link_failed', models.BooleanField(default=False)),
                ('imdb_failed_attempts', models.IntegerField(default=0)),
                ('main_tag', models.CharField(default='', max_length=100)),
                ('tags', models.JSONField(default=list)),
                ('directors', models.JSONField(default=list)),
                ('stars', models.JSONField(default=list)),
                ('writers', models.JSONField(default=list)),
                ('creators', models.JSONField(default=list)),
                ('serial', models.CharField(max_length=100, unique=True)),
                ('permission', models.IntegerField(default=1)),
                ('series', models.BooleanField(default=False)),
                ('private', models.BooleanField(default=False)),
                ('upload_success', models.BooleanField(default=False)),
                ('corruption_check_temp', models.BooleanField(default=False)),
                ('imdb_added', models.BooleanField(default=False)),
                ('format_conversion', models.BooleanField(default=False)),
                ('corruption_check_data', models.BooleanField(default=False)),
                ('visual_data_added', models.BooleanField(default=False)),
                ('audio_data_added', models.BooleanField(default=False)),
                ('total_rating_score', models.FloatField(default=0)),
                ('total_ratings', models.IntegerField(default=0)),
                ('visual_profile', models.JSONField(default=dict)),
                ('audio_profile', models.JSONField(default=dict)),
                ('visual_details', models.JSONField(default=dict)),
                ('audio_details', models.JSONField(default=dict)),
                ('current_status', models.CharField(default='Failed to Upload', max_length=100)),
                ('failed_attempts', models.IntegerField(default=0)),
                ('uploaded_date', models.DateTimeField(auto_now_add=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('description', models.TextField(default='')),
                ('uploaded_by', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, related_name='temp_videos', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Temp Video',
                'verbose_name_plural': 'Temp Videos',
                'db_table': 'temp_video',
            },
        ),
        migrations.CreateModel(
            name='Video',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('video_name', models.CharField(max_length=100)),
                ('title', models.CharField(default='', max_length=100)),
                ('video_location', models.CharField(default='data/videos/', max_length=300)),
                ('thumbnail_location', models.CharField(default='data/thumbnails/', max_length=300)),
                ('name', models.CharField(default='', max_length=100)),
                ('main_tag', models.CharField(default='', max_length=100)),
                ('tags', models.JSONField(default=list)),
                ('imdb_link', models.CharField(default='', max_length=300)),
                ('imdb_rating', models.FloatField(default=0)),
                ('serial', models.CharField(max_length=100, unique=True)),
                ('directors', models.JSONField(default=list)),
                ('stars', models.JSONField(default=list)),
                ('writers', models.JSONField(default=list)),
                ('creators', models.JSONField(default=list)),
                ('permission', models.IntegerField(default=1)),
                ('rating', models.FloatField(default=0)),
                ('series', models.BooleanField(default=False)),
                ('private', models.BooleanField(default=False)),
                ('total_rating_score', models.FloatField(default=0)),
                ('total_ratings', models.IntegerField(default=0)),
                ('visual_profile', models.JSONField(default=dict)),
                ('audio_profile', models.JSONField(default=dict)),
                ('visual_details', models.JSONField(default=dict)),
                ('audio_details', models.JSONField(default=dict)),
                ('current_status', models.CharField(default='Failed to Upload', max_length=100)),
                ('uploaded_date', models.DateTimeField(auto_now_add=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('description', models.TextField(default='')),
                ('uploaded_by', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, related_name='videos', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Video',
                'verbose_name_plural': 'Videos',
                'db_table': 'video',
            },
        ),
        migrations.CreateModel(
            name='VideoComments',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.TextField()),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to=settings.AUTH_USER_MODEL)),
                ('video_serial', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='videos.video')),
            ],
            options={
                'verbose_name': 'Video Comment',
                'verbose_name_plural': 'Video Comments',
                'db_table': 'video_comments',
            },
        ),
        migrations.CreateModel(
            name='VideoHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='history', to=settings.AUTH_USER_MODEL)),
                ('video_serial', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='history', to='videos.video')),
            ],
            options={
                'verbose_name': 'Video History',
                'verbose_name_plural': 'Video Histories',
                'db_table': 'video_history',
            },
        ),
    ]
